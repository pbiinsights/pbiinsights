{"version":3,"sources":["webpack:///./node_modules/ppv-gatsby-components/src/pagecomponents/CategoryPage/CategoryPage.tsx","webpack:///./node_modules/ppv-gatsby-components/src/components/SideBar/SideBarSearch.tsx"],"names":["Category","props","render","posts","this","data","edges","map","e","node","sort","a","b","fields","timestamp","categories","nestCategories","authors","currentCategory","getCategory","context","cat","currentCategoryString","friendlyname","currentCategoryPath","slug","c","parent","headerTags","urlJoin","push","header","url","description","type","title","tags","sidebar","isFixed","React","Component","Page","pageContext","location","pageQuery","SideBarSearch","className","style","marginBottom","action","method","name","target","value","textAlign","marginTop","autoComplete","placeholder","required"],"mappings":"oUA2BO,IAAMA,EAAb,Y,QAEE,WAAYC,GACZ,OACE,YAAMA,IADR,KAHF,O,EAAA,G,EAAA,G,6EAAA,YAMEC,OAAA,WAiBE,IAhBA,IAAIC,EAAQC,KAAKH,MAAMI,KAAKF,MAAMG,MAC/BC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QACXC,MAAK,SAACC,EAAEC,GACP,OAAGD,EAAEE,OAAOC,UAAYF,EAAEC,OAAOC,WACvB,EAED,KAETC,EAAwBC,YAAeZ,KAAKH,MAAMI,KAAKU,WAAWT,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,SACnFQ,EAAwBb,KAAKH,MAAMI,KAAKY,QAAQX,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QACjES,EAAwBC,YAAYf,KAAKH,MAAMmB,QAAQC,IAAKN,GAC5DO,EAAwBJ,EAAgBK,aACxCC,EAAwBN,EAAgBO,KACxCC,EAAwBR,EAAgBS,OACxCC,EAAwB,CAACV,EAAgBK,cAElC,MAALG,GAEJJ,EAAwBI,EAAEH,aAAe,MAAQD,EACjDE,EAAwBK,YAAQH,EAAED,KAAMD,GACxCI,EAAWE,KAAKJ,EAAEH,cAElBG,EAAIA,EAAEC,OAGR,IAAII,EAAuB,CACzBC,IAAKH,YAAQ,WAAYL,GACzBS,YAAa,eAAef,EAAgBK,aAC5CW,KAAM,SACNC,MAAUjB,EAAgBK,aAArB,0DACLa,KAAMR,GAGR,OACE,kBAAC,IAAD,CACAG,OAAQA,EACRM,QACE,kBAAC,IAAD,CAASC,SAAS,GAChB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,QAIJ,kBAAC,IAAD,CAAaH,MAAO,eAAeb,IACnC,kBAAC,IAAD,CAAUnB,MAAOA,EAAOY,WAAYA,EAAYE,QAASA,MArD/D,GAA8BsB,IAAMC,WAgErBC,UALF,SAAC,GAAkC,IAAjCC,EAAiC,EAAjCA,YAAarC,EAAoB,EAApBA,KAAMsC,EAAc,EAAdA,SAChC,OACE,kBAAC3C,EAAD,CAAUK,KAAMA,EAAMsC,SAAUA,EAAUvB,QAASsB,KAKhD,IAAME,EAAY,c,uGCzFlB,IAAMC,EAAb,Y,QAAA,yD,EAAA,G,EAAA,G,6EAAA,YAGE3C,OAAA,WAEE,OACE,yBAAK4C,UAAU,qBACb,yBAAKA,UAAU,kBAAf,kCAGA,yBAAKA,UAAU,mBAGb,yBAAKA,UAAU,uBACb,yBAAKC,MAAO,CAACC,aAAc,QACzB,0BAAMC,OAAO,gCAAgCH,UAAU,aAAaI,OAAO,MAAMC,KAAK,aAAaC,OAAO,UACxG,2BAAOD,KAAK,aAAajB,KAAK,SAASmB,MAAM,0BAE7C,yBAAKN,MAAO,CAACO,UAAW,SAAUC,UAAW,QAC3C,2BAAQC,aAAa,KAAKV,UAAU,sBAAsBK,KAAK,IAAIM,YAAY,GAAGC,UAAU,EAAOxB,KAAK,UAE1G,yBAAKa,MAAO,CAACO,UAAW,SAAUC,UAAW,QAC3C,4BAAQT,UAAU,uBAAuBZ,KAAK,UAA9C,iBAtBlB,GAAmCK,IAAMC","file":"component---node-modules-ppv-gatsby-components-src-pagecomponents-category-page-category-page-tsx-ecae5f2aefa5d2825db3.js","sourcesContent":["import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { IQueryArrayResult, ICategory, IAuthor, IPost, ITag, IGatsbyLocation } from '../../interfaces';\r\nimport { ContentLayoutWithSidebar } from '../../components/Layout/ContentLayout';\r\nimport { SideBar } from \"../../components/SideBar/SideBar\";\r\nimport { nestCategories, getCategory, urlJoin } from '../../tool';\r\nimport { SideBarQuickstart } from \"../../components/SideBar/SideBarQuickstart\";\r\nimport { SideBarHelp } from \"../../components/SideBar/SideBarHelp\";\r\nimport { SideBarSearch } from \"../../components/SideBar/SideBarSearch\";\r\nimport SideBarCategories from \"../../components/SideBar/SideBarCategories\";\r\nimport { CategoryBar } from \"../../components/CategoryBar/CategoryBar\";\r\nimport { PostList } from '../../components/Post/PostList';\r\nimport { IHeaderProps } from \"../../components/Layout/Header\";\r\n\r\ninterface IQueryResult\r\n{\r\n  data: {\r\n    posts: IQueryArrayResult<IPost>;\r\n    categories: IQueryArrayResult<ICategory>\r\n    authors: IQueryArrayResult<IAuthor>\r\n    tags: IQueryArrayResult<ITag>\r\n  };\r\n  context: any;\r\n  location: IGatsbyLocation;\r\n}\r\n\r\n\r\nexport class Category extends React.Component<IQueryResult>\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n  }\r\n  render(){\r\n    let posts = this.props.data.posts.edges\r\n      .map(e => e.node)\r\n      .sort((a,b) => {\r\n        if(a.fields.timestamp > b.fields.timestamp)\r\n          return -1\r\n        else\r\n          return 1;\r\n      });\r\n    let categories            = nestCategories(this.props.data.categories.edges.map(e => e.node));\r\n    let authors               = this.props.data.authors.edges.map(e => e.node);\r\n    let currentCategory       = getCategory(this.props.context.cat, categories);\r\n    let currentCategoryString = currentCategory.friendlyname;\r\n    let currentCategoryPath   = currentCategory.slug;\r\n    let c                     = currentCategory.parent;\r\n    let headerTags            = [currentCategory.friendlyname];\r\n\r\n    while(c != null)\r\n    {\r\n      currentCategoryString = c.friendlyname + \" / \" + currentCategoryString;\r\n      currentCategoryPath   = urlJoin(c.slug, currentCategoryPath)\r\n      headerTags.push(c.friendlyname);\r\n\r\n      c = c.parent;\r\n    }\r\n\r\n    let header: IHeaderProps = {\r\n      url: urlJoin(\"category\", currentCategoryPath),\r\n      description: `Posts about ${currentCategory.friendlyname}`,\r\n      type: \"object\",\r\n      title: `${currentCategory.friendlyname} Archive | Powerpivot Insights | Durchblick durch Daten`,\r\n      tags: headerTags\r\n    }\r\n\r\n    return (\r\n      <ContentLayoutWithSidebar\r\n      header={header} \r\n      sidebar={(\r\n        <SideBar isFixed={true}>\r\n          <SideBarQuickstart></SideBarQuickstart>\r\n          <SideBarHelp></SideBarHelp>\r\n          <SideBarSearch></SideBarSearch>\r\n          <SideBarCategories></SideBarCategories>\r\n        </SideBar>\r\n      )} \r\n      >\r\n      <CategoryBar title={\"Kategorie / \"+currentCategoryString}/>\r\n      <PostList posts={posts} categories={categories} authors={authors}/>\r\n      </ContentLayoutWithSidebar>\r\n    )\r\n  }\r\n}\r\n\r\nconst Page = ({pageContext, data, location}) => {\r\n  return (\r\n    <Category data={data} location={location} context={pageContext}></Category>\r\n  );\r\n};\r\nexport default Page;\r\n\r\nexport const pageQuery = graphql`\r\n  query categoryPosts($cat: String!, $now: Int!) {\r\n    posts: allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: {\r\n          regex: \"/.*/data/posts/.*[.]md/\"\r\n        }, \r\n        frontmatter: {\r\n          categories: {\r\n            eq: $cat\r\n          }\r\n        }\r\n        fields: {\r\n          publishTimestamp:{\r\n            lt: $now\r\n          }\r\n        }\r\n      }) {\r\n      edges {\r\n        node {\r\n          ...postShort\r\n        }\r\n      }\r\n    }\r\n    ...categories\r\n    ...authorsMarkdown\r\n    ...tags\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport \"./SideBar.sass\";\r\nimport { Link } from \"gatsby\";\r\n\r\nexport class SideBarSearch extends React.Component<{}>\r\n{\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"sidebar-component\">\r\n        <div className=\"sidebar-header\">\r\n            Artikel mit Google durchsuchen\r\n        </div>\r\n        <div className=\"sidebar-content\">\r\n        \r\n        \r\n          <div className=\"sidebar-content-pad\">\r\n            <div style={{marginBottom: \"5px\"}}>\r\n              <form action=\"https://www.google.com/search\" className=\"searchform\" method=\"get\" name=\"searchform\" target=\"_blank\">\r\n                <input name=\"sitesearch\" type=\"hidden\" value=\"powerpivotinsights.de\"/>\r\n                \r\n                <div style={{textAlign: \"center\", marginTop: \"5px\"}}>\r\n                  <input  autoComplete=\"on\" className=\"form-control search\" name=\"q\" placeholder=\"\" required={true}  type=\"text\"/>\r\n                </div>\r\n                <div style={{textAlign: \"center\", marginTop: \"5px\"}}>\r\n                  <button className=\"button action-button\" type=\"submit\">Suchen</button>\r\n              </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}"],"sourceRoot":""}