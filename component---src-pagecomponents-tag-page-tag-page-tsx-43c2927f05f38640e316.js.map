{"version":3,"sources":["webpack:///./src/pagecomponents/TagPage/TagPage.tsx","webpack:///./src/components/Post/PostPreview.tsx","webpack:///./src/components/Content/EmptyContent.tsx","webpack:///./src/components/Post/PostList.tsx"],"names":["Tag","props","render","posts","this","data","edges","map","e","node","sort","a","b","fields","timestamp","categories","nestCategories","authors","header","url","urlJoin","context","tag","slug","description","name","type","title","tags","sidebar","isFixed","React","Component","Page","pageContext","location","pageQuery","PostPreview","post","className","PostHeader","frontmatter","commentCnt","author","to","content","abstract","excerpt","EmptyContent","PostList","p","i","key","c","getCategory","getAuthor","length"],"mappings":"8TA4BO,IAAMA,EAAb,Y,QAEE,WAAYC,GACZ,OACE,YAAMA,IADR,KAHF,O,EAAA,G,EAAA,G,6EAAA,YAMEC,OAAA,WAEE,IAAIC,EAAQC,KAAKH,MAAMI,KAAKF,MAAMG,MAC/BC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QACXC,MAAK,SAACC,EAAEC,GACP,OAAGD,EAAEE,OAAOC,UAAYF,EAAEC,OAAOC,WACvB,EAED,KAETC,EAAaC,YAAeZ,KAAKH,MAAMI,KAAKU,WAAWT,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,SACxEQ,EAAUb,KAAKH,MAAMI,KAAKY,QAAQX,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAEnDS,EAAuB,CACzBC,IAAKC,YAAQ,MAAOhB,KAAKH,MAAMoB,QAAQC,IAAIC,MAC3CC,YAAa,cAAcpB,KAAKH,MAAMoB,QAAQC,IAAIG,KAClDC,KAAM,SACNC,MAAUvB,KAAKH,MAAMoB,QAAQC,IAAIG,KAA5B,0DACLG,KAAM,CAACxB,KAAKH,MAAMoB,QAAQC,IAAIG,OAGhC,OACE,kBAAC,IAAD,CACAP,OAAQA,EACRW,QACE,kBAAC,IAAD,CAASC,SAAS,GAChB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,QAIJ,kBAAC,IAAD,CAAaH,MAAO,UAAUvB,KAAKH,MAAMoB,QAAQC,IAAIG,OACrD,kBAAC,IAAD,CAAUtB,MAAOA,EAAOY,WAAYA,EAAYE,QAASA,MAvC/D,GAAyBc,IAAMC,WAkDhBC,UALF,SAAC,GAAkC,IAAjCC,EAAiC,EAAjCA,YAAa7B,EAAoB,EAApBA,KAAM8B,EAAc,EAAdA,SAChC,OACE,kBAACnC,EAAD,CAAKK,KAAMA,EAAM8B,SAAUA,EAAUd,QAASa,KAM3C,IAAME,EAAY,a,uHCzElB,IAAMC,EAAb,Y,QACE,WAAYpC,GAAO,OACjB,YAAMA,IADW,KADrB,O,EAAA,G,EAAA,G,6EAAA,YAKEC,OAAA,WAAS,IACDoC,EAASlC,KAAKH,MAAdqC,KACN,OACE,yBAAKC,UAAU,gBACb,6BACE,kBAACC,EAAA,EAAD,CAAYC,YAAaH,EAAKG,YAAaC,WAAYJ,EAAKzB,OAAO6B,WAAYC,OAAQvC,KAAKH,MAAM0C,OAAQ5B,WAAYX,KAAKH,MAAMc,cAEnI,yBAAKwB,UAAU,gBACf,kBAAC,OAAD,CAAMK,GAAIN,EAAKG,YAAYlB,MACzB,kBAAC,IAAD,CAAasB,QAASzC,KAAKH,MAAMqC,KAAKzB,OAAOiC,SAAW1C,KAAKH,MAAMqC,KAAKzB,OAAOiC,SAAW1C,KAAKH,MAAMqC,KAAKS,SAA1G,SAdV,GAAiChB,IAAMC,W,UCLhC,IAAMgB,EAAb,Y,QAAA,yD,EAAA,G,EAAA,G,6EAAA,YAEE9C,OAAA,WAEE,OACE,yBAAKqC,UAAU,2BAAf,oCALN,GAAkCR,IAAMC,W,kCCGjC,IAAMiB,EAAb,Y,QAAA,yD,EAAA,G,EAAA,G,6EAAA,YAEE/C,OAAA,WACA,WACE,OACE,6BAEEE,KAAKH,MAAME,MAAMI,KAAI,SAAC2C,EAAEC,GAAH,OACnB,yBAAKC,IAAKD,GACR,kBAAC,EAAD,CAAab,KAAMY,EAAGnC,WAAYmC,EAAET,YAAY1B,WAAWR,KAAI,SAAA8C,GAAC,OAAIC,YAAYD,EAAG,EAAKpD,MAAMc,eAAc4B,OAAQY,YAAUL,EAAET,YAAYE,OAAQ,EAAK1C,MAAMgB,eAKxI,GAA3Bb,KAAKH,MAAME,MAAMqD,OAAc,kBAAC,EAAD,MAAkB,KAdzD,GAA8BzB,IAAMC","file":"component---src-pagecomponents-tag-page-tag-page-tsx-43c2927f05f38640e316.js","sourcesContent":["import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { IQueryArrayResult, ICategory, IAuthor, IComment, ISpecialPage, ICustomerStory, IPost, ITag, IGatsbyLocation } from '../../interfaces';\r\nimport { ContentLayoutWithSidebar } from '../../components/Layout/ContentLayout';\r\nimport { SideBar } from \"../../components/SideBar/SideBar\";\r\nimport { getAuthor, nestCategories, urlJoin } from '../../tool';\r\nimport { SideBarQuickstart } from \"../../components/SideBar/SideBarQuickstart\";\r\nimport { SideBarHelp } from \"../../components/SideBar/SideBarHelp\";\r\nimport SideBarCategories from \"../../components/SideBar/SideBarCategories\";\r\nimport { PostPreview } from \"../../components/Post/PostPreview\";\r\nimport { CategoryBar } from \"../../components/CategoryBar/CategoryBar\";\r\nimport { EmptyContent } from \"../../components/Content/EmptyContent\";\r\nimport { PostList } from \"../../components/Post/PostList\";\r\nimport { IHeaderProps } from \"../../components/Layout/Header\";\r\n\r\ninterface IQueryResult\r\n{\r\n  data: {\r\n    posts: IQueryArrayResult<IPost>;\r\n    categories: IQueryArrayResult<ICategory>\r\n    authors: IQueryArrayResult<IAuthor>\r\n  }\r\n  context: {\r\n    tag: ITag\r\n  };\r\n  location: IGatsbyLocation;\r\n}\r\n\r\nexport class Tag extends React.Component<IQueryResult>\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n  }\r\n  render()\r\n  {\r\n    let posts = this.props.data.posts.edges\r\n      .map(e => e.node)\r\n      .sort((a,b) => {\r\n        if(a.fields.timestamp > b.fields.timestamp)\r\n          return -1\r\n        else\r\n          return 1;\r\n      });\r\n    let categories = nestCategories(this.props.data.categories.edges.map(e => e.node));\r\n    let authors = this.props.data.authors.edges.map(e => e.node);\r\n\r\n    let header: IHeaderProps = {\r\n      url: urlJoin(\"tag\", this.props.context.tag.slug),\r\n      description: `Posts Ã¼ber ${this.props.context.tag.name}`,\r\n      type: \"object\",\r\n      title: `${this.props.context.tag.name} Archive | Powerpivot Insights | Durchblick durch Daten`,\r\n      tags: [this.props.context.tag.name],\r\n    }\r\n\r\n    return (\r\n      <ContentLayoutWithSidebar \r\n      header={header}\r\n      sidebar={(\r\n        <SideBar isFixed={true}>\r\n          <SideBarQuickstart></SideBarQuickstart>\r\n          <SideBarHelp></SideBarHelp>\r\n          <SideBarCategories></SideBarCategories>\r\n        </SideBar>\r\n      )} \r\n      >\r\n      <CategoryBar title={\"Tags / \"+this.props.context.tag.name}></CategoryBar>\r\n      <PostList posts={posts} categories={categories} authors={authors}/>\r\n      </ContentLayoutWithSidebar>\r\n    )\r\n  }\r\n}\r\n\r\nconst Page = ({pageContext, data, location}) => {\r\n  return (\r\n    <Tag data={data} location={location} context={pageContext}></Tag>\r\n  )\r\n}\r\nexport default Page;\r\n\r\n\r\nexport const pageQuery = graphql`\r\n  query tagsPosts($tagSlug: String!, $now: Int!) {\r\n    posts: allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: {\r\n          regex: \"/.*/data/posts/.*[.]md/\"\r\n        }, \r\n        frontmatter: {\r\n          tags: {eq: $tagSlug}\r\n        }\r\n        fields: {\r\n            publishTimestamp:{\r\n            lt: $now\r\n          }\r\n        }\r\n      }) {\r\n      edges {\r\n        node {\r\n          ...postShort\r\n        }\r\n      }\r\n    }\r\n    ...categories\r\n    ...authorsMarkdown\r\n  }\r\n`\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./Post.sass\";\r\nimport { PostHeader } from './PostHeader';\r\nimport { IPostProps } from \"./Post\";\r\nimport { HTMLContent } from \"../Content/Content\";\r\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\r\n\r\nexport class PostPreview extends React.Component<IPostProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let { post } = this.props;\r\n    return (\r\n      <div className=\"post-preview\">\r\n        <div>\r\n          <PostHeader frontmatter={post.frontmatter} commentCnt={post.fields.commentCnt} author={this.props.author} categories={this.props.categories}/>\r\n        </div>\r\n        <div className=\"post-content\">\r\n        <Link to={post.frontmatter.slug}>\r\n          <HTMLContent content={this.props.post.fields.abstract ? this.props.post.fields.abstract : this.props.post.excerpt}> </HTMLContent>\r\n        </Link>\r\n          {/* <div>\r\n            <Link to={post.frontmatter.slug}><span style={{verticalAlign: \"middle\"}}><FaLongArrowAltRight/></span> Mehr</Link>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport \"./Content.sass\"\r\n\r\nexport class EmptyContent extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"empty-content-container\">Hier gibt es noch keine Inhalte</div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IPost, IAuthor } from '../../interfaces';\r\nimport { getCategory, getAuthor, nestCategories, INestedCategory } from \"../../tool\";\r\nimport { PostPreview } from \"./PostPreview\";\r\nimport { EmptyContent } from \"../Content/EmptyContent\";\r\n\r\nexport class PostList extends React.Component<{posts: IPost[], categories: INestedCategory[], authors: IAuthor[]}>\r\n{\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n      {\r\n        this.props.posts.map((p,i) => (\r\n          <div key={i}>\r\n            <PostPreview post={p} categories={p.frontmatter.categories.map(c => getCategory(c, this.props.categories))} author={getAuthor(p.frontmatter.author, this.props.authors)}></PostPreview>\r\n          </div>\r\n        ))\r\n      }\r\n      {\r\n        this.props.posts.length == 0 ? <EmptyContent/> : \"\"\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}