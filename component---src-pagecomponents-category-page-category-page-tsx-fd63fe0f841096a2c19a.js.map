{"version":3,"sources":["webpack:///./src/components/SideBar/SideBarSearch.tsx","webpack:///./src/pagecomponents/CategoryPage/CategoryPage.tsx","webpack:///./src/components/Post/PostPreview.tsx","webpack:///./src/components/Content/EmptyContent.tsx","webpack:///./src/components/Post/PostList.tsx"],"names":["SideBarSearch","thisHandleSubmit","props","alert","render","className","style","marginBottom","action","method","name","target","type","value","textAlign","marginTop","autoComplete","placeholder","required","React","Component","Category","posts","this","data","edges","map","e","node","sort","a","b","fields","timestamp","categories","nestCategories","authors","currentCategory","getCategory","context","cat","currentCategoryString","friendlyname","currentCategoryPath","slug","c","parent","headerTags","urlJoin","push","header","url","description","title","tags","ContentLayout","sidebar","SideBar","isFixed","SideBarQuickstart","SideBarHelp","SideBarCategories","CategoryBar","PostList","pageQuery","Page","pageContext","location","PostPreview","post","PostHeader","frontmatter","commentCnt","author","to","content","abstract","excerpt","EmptyContent","p","i","key","getAuthor","length"],"mappings":"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","file":"component---src-pagecomponents-category-page-category-page-tsx-fd63fe0f841096a2c19a.js","sourcesContent":["import React from \"react\";\r\nimport \"./SideBar.sass\";\r\nimport { Link } from \"gatsby\";\r\n\r\nexport class SideBarSearch extends React.Component<{}>\r\n{\r\n\r\n  thisHandleSubmit(props) {\r\n    \r\n    alert(\"Hallo\");\r\n    //action=\"https://www.google.com/search\" \r\n    //method=\"get\" \r\n    //target=\"_blank\"\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"sidebar-component\">\r\n        <div className=\"sidebar-header\">\r\n            Google Suche\r\n        </div>\r\n        <div className=\"sidebar-content\">\r\n          <div className=\"sidebar-content-pad\">\r\n            <div style={{marginBottom: \"5px\"}}>\r\n              <form action=\"https://www.google.com/search\" className=\"searchform\" method=\"get\" name=\"searchform\" target=\"_blank\">\r\n                <input name=\"sitesearch\" type=\"hidden\" value=\"powerbiinsights.de\"/>\r\n                <div style={{textAlign: \"center\", marginTop: \"5px\"}}>\r\n                  <input  autoComplete=\"on\" className=\"form-control search\" name=\"q\" placeholder=\"Mit google suchen\" required={true}  type=\"text\"/>\r\n                </div>\r\n                <div style={{textAlign: \"center\", marginTop: \"5px\"}}>\r\n                  <button className=\"button action-button\" type=\"submit\">Search</button>\r\n              </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { IQueryArrayResult, ICategory, IAuthor, IPost, ITag, IGatsbyLocation } from '../../interfaces';\r\nimport { ContentLayoutWithSidebar } from '../../components/Layout/ContentLayout';\r\nimport { SideBar } from \"../../components/SideBar/SideBar\";\r\nimport { nestCategories, getCategory, urlJoin } from '../../tool';\r\nimport { SideBarQuickstart } from \"../../components/SideBar/SideBarQuickstart\";\r\nimport { SideBarHelp } from \"../../components/SideBar/SideBarHelp\";\r\nimport SideBarCategories from \"../../components/SideBar/SideBarCategories\";\r\nimport { SideBarSearch } from \"../../components/SideBar/SideBarSearch\";\r\nimport { CategoryBar } from \"../../components/CategoryBar/CategoryBar\";\r\nimport { PostList } from '../../components/Post/PostList';\r\nimport { IHeaderProps } from \"../../components/Layout/Header\";\r\n\r\ninterface IQueryResult\r\n{\r\n  data: {\r\n    posts: IQueryArrayResult<IPost>;\r\n    categories: IQueryArrayResult<ICategory>\r\n    authors: IQueryArrayResult<IAuthor>\r\n    tags: IQueryArrayResult<ITag>\r\n  };\r\n  context: any;\r\n  location: IGatsbyLocation;\r\n}\r\n\r\n\r\nexport class Category extends React.Component<IQueryResult>\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n  }\r\n  render(){\r\n    let posts = this.props.data.posts.edges\r\n      .map(e => e.node)\r\n      .sort((a,b) => {\r\n        if(a.fields.timestamp > b.fields.timestamp)\r\n          return -1\r\n        else\r\n          return 1;\r\n      });\r\n    let categories            = nestCategories(this.props.data.categories.edges.map(e => e.node));\r\n    let authors               = this.props.data.authors.edges.map(e => e.node);\r\n    let currentCategory       = getCategory(this.props.context.cat, categories);\r\n    let currentCategoryString = currentCategory.friendlyname;\r\n    let currentCategoryPath   = currentCategory.slug;\r\n    let c                     = currentCategory.parent;\r\n    let headerTags            = [currentCategory.friendlyname];\r\n\r\n    while(c != null)\r\n    {\r\n      currentCategoryString = c.friendlyname + \" / \" + currentCategoryString;\r\n      currentCategoryPath   = urlJoin(c.slug, currentCategoryPath)\r\n      headerTags.push(c.friendlyname);\r\n\r\n      c = c.parent;\r\n    }\r\n\r\n    let header: IHeaderProps = {\r\n      url: urlJoin(\"category\", currentCategoryPath),\r\n      description: `Posts about ${currentCategory.friendlyname}`,\r\n      type: \"object\",\r\n      title: `${currentCategory.friendlyname} Archive | Powerpivot Insights | Durchblick durch Daten`,\r\n      tags: headerTags\r\n    }\r\n\r\n    return (\r\n      <ContentLayoutWithSidebar\r\n      header={header} \r\n      sidebar={(\r\n        <SideBar isFixed={true}>\r\n          <SideBarQuickstart></SideBarQuickstart>\r\n          <SideBarHelp></SideBarHelp>\r\n          <SideBarSearch></SideBarSearch>\r\n          <SideBarCategories></SideBarCategories>\r\n        </SideBar>\r\n      )} \r\n      >\r\n      <CategoryBar title={\"Kategorie / \"+currentCategoryString}/>\r\n      <PostList posts={posts} categories={categories} authors={authors}/>\r\n      </ContentLayoutWithSidebar>\r\n    )\r\n  }\r\n}\r\n\r\nconst Page = ({pageContext, data, location}) => {\r\n  return (\r\n    <Category data={data} location={location} context={pageContext}></Category>\r\n  );\r\n};\r\nexport default Page;\r\n\r\nexport const pageQuery = graphql`\r\n  query categoryPosts($cat: String!, $now: Int!) {\r\n    posts: allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: {\r\n          regex: \"/.*/data/posts/.*[.]md/\"\r\n        }, \r\n        frontmatter: {\r\n          categories: {\r\n            eq: $cat\r\n          }\r\n        }\r\n        fields: {\r\n          publishTimestamp:{\r\n            lt: $now\r\n          }\r\n        }\r\n      }) {\r\n      edges {\r\n        node {\r\n          ...postShort\r\n        }\r\n      }\r\n    }\r\n    ...categories\r\n    ...authorsMarkdown\r\n    ...tags\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./Post.sass\";\r\nimport { PostHeader } from './PostHeader';\r\nimport { IPostProps } from \"./Post\";\r\nimport { HTMLContent } from \"../Content/Content\";\r\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\r\n\r\nexport class PostPreview extends React.Component<IPostProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let { post } = this.props;\r\n    return (\r\n      <div className=\"post-preview\">\r\n        <div>\r\n          <PostHeader frontmatter={post.frontmatter} commentCnt={post.fields.commentCnt} author={this.props.author} categories={this.props.categories}/>\r\n        </div>\r\n        <div className=\"post-content\">\r\n        <Link to={post.frontmatter.slug}>\r\n          <HTMLContent content={this.props.post.fields.abstract ? this.props.post.fields.abstract : this.props.post.excerpt}> </HTMLContent>\r\n        </Link>\r\n          {/* <div>\r\n            <Link to={post.frontmatter.slug}><span style={{verticalAlign: \"middle\"}}><FaLongArrowAltRight/></span> Mehr</Link>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport \"./Content.sass\"\r\n\r\nexport class EmptyContent extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"empty-content-container\">Hier gibt es noch keine Inhalte</div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IPost, IAuthor } from '../../interfaces';\r\nimport { getCategory, getAuthor, nestCategories, INestedCategory } from \"../../tool\";\r\nimport { PostPreview } from \"./PostPreview\";\r\nimport { EmptyContent } from \"../Content/EmptyContent\";\r\n\r\nexport class PostList extends React.Component<{posts: IPost[], categories: INestedCategory[], authors: IAuthor[]}>\r\n{\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n      {\r\n        this.props.posts.map((p,i) => (\r\n          <div key={i}>\r\n            <PostPreview post={p} categories={p.frontmatter.categories.map(c => getCategory(c, this.props.categories))} author={getAuthor(p.frontmatter.author, this.props.authors)}></PostPreview>\r\n          </div>\r\n        ))\r\n      }\r\n      {\r\n        this.props.posts.length == 0 ? <EmptyContent/> : \"\"\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}