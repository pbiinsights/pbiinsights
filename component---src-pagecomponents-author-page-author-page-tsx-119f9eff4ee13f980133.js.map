{"version":3,"sources":["webpack:///./src/pagecomponents/AuthorPage/AuthorPage.tsx","webpack:///./src/components/Post/PostPreview.tsx","webpack:///./src/components/Content/EmptyContent.tsx","webpack:///./src/components/Post/PostList.tsx"],"names":["AuthorPage","render","posts","this","props","data","edges","map","e","node","sort","a","b","fields","timestamp","categories","header","url","urlJoin","context","author","frontmatter","slug","description","firstname","lastname","type","title","tags","image","avatar","childImageSharp","fixed","src","sidebar","isFixed","nestCategories","authors","React","Component","Page","pageContext","location","pageQuery","PostPreview","post","className","PostHeader","commentCnt","to","content","abstract","excerpt","EmptyContent","PostList","p","i","key","c","getCategory","getAuthor","length"],"mappings":"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","file":"component---src-pagecomponents-author-page-author-page-tsx-119f9eff4ee13f980133.js","sourcesContent":["import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { AuthorContent } from \"../../components/Author/AuthorContent\";\r\nimport { IPost, ICategory, IAuthor, IQueryArrayResult, IGatsbyLocation } from '../../interfaces';\r\nimport { ContentLayoutWithSidebar } from \"../../components/Layout/ContentLayout\";\r\nimport { SideBar } from \"../../components/SideBar/SideBar\";\r\nimport { SideBarQuickstart } from \"../../components/SideBar/SideBarQuickstart\";\r\nimport { SideBarHelp } from \"../../components/SideBar/SideBarHelp\";\r\nimport { CategoryBar } from \"../../components/CategoryBar/CategoryBar\";\r\nimport { PostList } from \"../../components/Post/PostList\";\r\nimport { urlJoin, nestCategories } from '../../tool';\r\nimport { IHeaderProps } from \"../../components/Layout/Header\";\r\n\r\ninterface IQueryResult \r\n{\r\n  data: {\r\n    posts: IQueryArrayResult<IPost>;\r\n    categories: IQueryArrayResult<ICategory>;\r\n    avatar: any;\r\n  }\r\n  context: {\r\n    author: IAuthor;\r\n  }\r\n  location: IGatsbyLocation;\r\n}\r\nexport class AuthorPage extends React.Component<IQueryResult>\r\n{\r\n  render() \r\n  {\r\n    let posts      = this.props.data.posts.edges\r\n      .map(e => e.node)\r\n      .sort((a,b) => {\r\n        if(a.fields.timestamp > b.fields.timestamp)\r\n          return -1\r\n        else\r\n          return 1;\r\n      });\r\n\r\n    let categories = this.props.data.categories.edges.map(e => e.node);\r\n\r\n    let header: IHeaderProps = {\r\n      url: urlJoin(\"author\", this.props.context.author.frontmatter.slug),\r\n      description: `Posts von ${this.props.context.author.frontmatter.firstname + \" \" + this.props.context.author.frontmatter.lastname}`,\r\n      type: \"object\",\r\n      title: `${this.props.context.author.frontmatter.firstname + \" \" + this.props.context.author.frontmatter.lastname}, Autor bei Powerpivot Insights | Durchblick durch Daten`,\r\n      tags: [\"author\", this.props.context.author.frontmatter.firstname, this.props.context.author.frontmatter.lastname],\r\n      image: this.props.data.avatar.childImageSharp.fixed.src\r\n    }\r\n    return(\r\n      <ContentLayoutWithSidebar \r\n        header={header}\r\n        sidebar={(\r\n          <SideBar isFixed={false}>\r\n            <SideBarQuickstart/>\r\n            <SideBarHelp/>\r\n            {/* <SideBarCategories/> */}\r\n          </SideBar> \r\n        )} \r\n        >\r\n      <CategoryBar title={\"Author\"}/>\r\n      <AuthorContent author={this.props.context.author} avatar={this.props.data.avatar}></AuthorContent>\r\n      <hr/>\r\n      <PostList posts={posts} categories={nestCategories(categories)} authors={[this.props.context.author]}/>\r\n      </ContentLayoutWithSidebar>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst Page = ({data, pageContext, location}) => {\r\n  return (\r\n    <AuthorPage data={data} context={pageContext} location={location}></AuthorPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n\r\nexport const pageQuery = graphql`\r\n  query authorPosts($authorSlug: String!, $avatar: String!, $now: Int!) {\r\n    posts: allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: {\r\n          regex: \"/.*\\/data\\/posts\\/.*[.]md/\"\r\n        }\r\n        frontmatter: {\r\n          author: {\r\n            eq: $authorSlug\r\n          }\r\n        }\r\n        fields: {\r\n          publishTimestamp:{\r\n            lt: $now\r\n          }\r\n        }\r\n      }\r\n    )\r\n    {\r\n      edges {\r\n        node {\r\n          ...postShort\r\n        }\r\n      }\r\n    }\r\n    avatar: file(\r\n    \tabsolutePath: { regex: \"/.*\\/data\\/img\\//\"}  \r\n      name:{ eq: $avatar}\r\n    ){\r\n      childImageSharp {\r\n        fixed(width: 100, height: 100) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    ...categories\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./Post.sass\";\r\nimport { PostHeader } from './PostHeader';\r\nimport { IPostProps } from \"./Post\";\r\nimport { HTMLContent } from \"../Content/Content\";\r\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\r\n\r\nexport class PostPreview extends React.Component<IPostProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let { post } = this.props;\r\n    return (\r\n      <div className=\"post-preview\">\r\n        <div>\r\n          <PostHeader frontmatter={post.frontmatter} commentCnt={post.fields.commentCnt} author={this.props.author} categories={this.props.categories}/>\r\n        </div>\r\n        <div className=\"post-content\">\r\n        <Link to={post.frontmatter.slug}>\r\n          <HTMLContent content={this.props.post.fields.abstract ? this.props.post.fields.abstract : this.props.post.excerpt}> </HTMLContent>\r\n        </Link>\r\n          {/* <div>\r\n            <Link to={post.frontmatter.slug}><span style={{verticalAlign: \"middle\"}}><FaLongArrowAltRight/></span> Mehr</Link>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport \"./Content.sass\"\r\n\r\nexport class EmptyContent extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"empty-content-container\">Hier gibt es noch keine Inhalte</div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IPost, IAuthor } from '../../interfaces';\r\nimport { getCategory, getAuthor, nestCategories, INestedCategory } from \"../../tool\";\r\nimport { PostPreview } from \"./PostPreview\";\r\nimport { EmptyContent } from \"../Content/EmptyContent\";\r\n\r\nexport class PostList extends React.Component<{posts: IPost[], categories: INestedCategory[], authors: IAuthor[]}>\r\n{\r\n  render() \r\n  {\r\n    return (\r\n      <div>\r\n      {\r\n        this.props.posts.map((p,i) => (\r\n          <div key={i}>\r\n            <PostPreview post={p} categories={p.frontmatter.categories.map(c => getCategory(c, this.props.categories))} author={getAuthor(p.frontmatter.author, this.props.authors)}></PostPreview>\r\n          </div>\r\n        ))\r\n      }\r\n      {\r\n        this.props.posts.length == 0 ? <EmptyContent/> : \"\"\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}